- content_for :use_full_container, true

- header_classes = []
- header_cover_classes = []
- header_cover_classes << 'has-cover' if @user.profile.cover_wallpaper.present?
- header_cover_data = {}

- if @user.present? && controller_name == 'users' && action_name == 'show'
  - header_cover_data[:spy] = 'affix'
  - header_cover_data[:offset_top] = 268
- else
  - header_classes << 'affix'

- content_for :pre_container do
  %header.user-profile-header{:class => header_classes}
    .header-media-cover.has-avatar{:class => header_cover_classes,
                                   :style => @user.profile.cover_style,
                                   :data => header_cover_data}
      .media-meta
        .container-fluid
          .pull-right
            - if myself?
              .btn-group
                %button{:type => 'button', :class => 'btn btn-lg btn-default dropdown-toggle', :data => {:toggle => 'dropdown'}}
                  = fa_icon_tag('cog')
                  Settings
                %ul.dropdown-menu.pull-right{:role => 'menu'}
                  - if @user.profile.cover_wallpaper.present?
                    %li
                      = link_to remove_profile_cover_account_profile_path, data: { method: :delete, confirm: 'Are you sure?' } do
                        = fa_icon_tag('times')
                        Remove cover
                  - else
                    %li
                      %a{:href => '#', :data => {:action => 'explain-add-profile-cover'}}
                        = fa_icon_tag('picture-o')
                        Add profile cover
                  %li.divider
                  %li
                    = link_to account_collections_path do
                      = fa_icon_tag('pencil')
                      Manage collections
                  %li
                    = link_to edit_account_profile_path do
                      = fa_icon_tag('pencil')
                      Edit profile
            - else
              - if can?(:subscribe, @user)
                = render partial: 'shared/buttons/subscribe', locals: { subscribable: @user }
          .media
            - if myself?
              = link_to edit_account_profile_path, class: 'pull-left' do
                = image_tag user_avatar_url(@user, 100), alt: @user.username, class: 'media-object avatar', width: 100, height: 100
            - else
              = image_tag user_avatar_url(@user, 100), alt: @user.username, class: 'media-object avatar pull-left', width: 100, height: 100
            .media-body
              %h2.media-heading.username
                = username_tag @user
                = flag_tag_for @user
                = user_online_status_tag @user
                %small= role_name_for @user
      %nav.navbar.navbar-default{:role => 'navigation'}
        .container-fluid
          %ul.nav.navbar-nav
            = active_link_to 'Profile', @user, active: [['users'], ['show']], wrap_tag: :li

            = active_link_to user_wallpapers_path(@user), wrap_tag: :li do
              Wallpapers
              - if @user.wallpapers_count > 0
                %span.badge= @user.wallpapers_count

            = active_link_to user_collections_path(@user), wrap_tag: :li do
              Collections
              - if @user.public_collections_count > 0
                %span.badge= @user.public_collections_count

            = active_link_to user_favourites_path(@user), wrap_tag: :li do
              Favourites
              - if @user.favourites_count > 0
                %span.badge= @user.favourites_count

            = active_link_to following_user_path(@user), wrap_tag: :li do
              Following
              - if @user.followings_count > 0
                %span.badge= @user.followings_count

            = active_link_to followers_user_path(@user), wrap_tag: :li do
              Followers
              - if @user.followers_count > 0
                %span.badge= @user.followers_count

= render template: 'layouts/application'