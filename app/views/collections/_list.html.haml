- if collections.any?
  %ul.list-collection{:class => local_assigns[:extra_css_class]}
    - collections.each do |collection|
      - cache_if(should_apply_purity_settings, ['collections', 'list-item', collection, current_purities]) do
        - wallpapers = collection.recently_added_wallpapers.accessible_by(current_ability, :read).processed.limit(4)
        - wallpapers = wallpapers.with_purities(current_purities) if should_apply_purity_settings
        - wallpapers = WallpapersDecorator.new(wallpapers, context: { user: current_user })
        - next if wallpapers.empty?
        %li{:data => {:collection_id => collection.id}}
          .media
            = link_to collection, class: 'media-object' do
              - first_wallpaper = wallpapers.shift
              = image_tag first_wallpaper.thumbnail_image_url, width: 250, height: 188, class: "purity-#{first_wallpaper.purity}"
              .row-collection
                - wallpapers.each do |wallpaper|
                  = image_tag wallpaper.thumbnail_image.thumb("80x80##{wallpaper.image_gravity}").url, width: 80, height: 80, class: "purity-#{wallpaper.purity}"
                - (3 - wallpapers.size).times do
                  .placeholder
            .media-body
              %h5.media-heading
                = collection.name
                - if collection.private?
                  %span.label.label-danger Private
              %ul.list-inline.pull-right.text-muted
                %li
                  %span.fa.fa-eye
                  = collection.impressions_count
                %li
                  %span.fa.fa-picture-o
                  = collection.wallpapers_count_for(current_purities)
              = link_to collection.user do
                = image_tag user_avatar_url(collection.user, 20), alt: collection.user.username
                = username_tag collection.user
  - if collections.respond_to? :total_pages
    = link_to_next_page collections, 'Next Page', class: 'btn btn-block btn-default btn-lg', params: params

- else
  %h2.text-center No search results found :(
